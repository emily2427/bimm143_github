---
title: "Class 5: Data Viz with ggplot"
author: "Emily Chen (A16925878)"
format: pdf
toc: TRUE
---

# Background

There are many graphic systems available in R. These include "base" R and tones and tones of added packages like **ggplot2**.

Let's compare "base" and **ggplot2** briefly. We can use some example data that is built-in with R called `cars`:

```{r}
head(cars)
```

In base R I can just call `plot()`
```{r}
plot(cars)
```


How can we do this with **ggplot2**

First, we need to install the package. We do this `install.packages("ggplot2")`. I only need to do this once, and then it will be available on my computer from then on.

>Key Points: I only install packages in the R console, not writing quarto docs or R scripts

Before I use any add-on packages, I must load ut up with a call to `library()`
```{r}
library(ggplot2)
ggplot(cars)
```

Every ggplot has at least 3 things: 

- the **data** (in our case `cars`)

- the **aes**thetics (how the data map to the plot)

- the **geom**s that determine how the plot is drawn (lines, points, columns, etc.)

```{r}
ggplot(cars)+
  aes(x=speed, y=dist)
```

```{r}
ggplot(cars)+
  aes(x=speed, y=dist)+
  geom_point()
```

For "simple" plots, ggplots is much more verbose than base R, but the defaults are nicer, and for complicated plots, it becomes much more efficient adn structured. 

>Add a line to show relationship pf speed to stopping distance (i.e. add another "layer")

```{r}
p<- ggplot(cars)+
  aes(x=speed, y=dist)+
  geom_point()+
  geom_smooth (se=FALSE, method="lm")
```

I can always save any ggplot object (i.e. plot) and then use it laterfor adding more layers

```{r}
p
```


>Q. Add a title and subtitle to the plot

```{r}
p + labs(
  title="Speed vs Distance",
  subtitle="Stopping distance of old cars",
  captions="BIMM143",
  x= "Speed (MPG)",
  y= "Stopping distance (ft)")+
theme_bw()
```

## Using different aes and geoms



## Gene expression plot

Read input data 
```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```

> Q. How many genes are on the data set?

```{r}
nrow(genes)
```
```{r}
ncol(genes)
```
> Q. What are the column names

```{r}
colnames(genes)
```
> Q. How many "up" and "down" regulated genes are there ?

```{r}
head(genes$State)
```
```{r}
table(genes$State)
```
## Custom color plot

> Q. Make a first plot of this data

```{r}
ggplot(genes)+
  aes(x=Condition1, y=Condition2, col=State)+
  scale_color_manual(values= c("pink", "purple", "skyblue"))+
  geom_point()+
  labs(title= "Gene Expression Changes Upon Drug Treatment", x= "Control (no drug)", y="Drug treated")+
  theme_bw()
```

# Using Differnt geoms

Lets plot some aspect of the in-built `mtcars` dataset

```{r}
head(mtcars)
```

> Q. Scatter plot of `mpg` vs `disp`

```{r}
p1<- ggplot(mtcars)+
  aes(x=mpg, y=disp)+
  geom_point()+
  labs(title= "Miles per Gallon vs Displacement", x= "Miles per Gallon", y="Distance")+
  theme_bw()
  
```

> Q. boxplot of `gear` vs `disp`

```{r}
p2<-ggplot(mtcars)+
  aes(x=gear, y=disp, group=gear)+
  geom_boxplot()+
  labs(title= "Gear vs Displacement", x= "gear", y="Distance")+
  theme_bw()
  
```

> Q. barplot of `carb`

```{r}
p3<-ggplot(mtcars)+
  aes(carb)+
  geom_bar()+
  theme_bw()
```

> Smooth of `disp` vs `qsec`

```{r}
p4<-ggplot(mtcars)+
  aes(x=disp, y=qsec)+
  geom_smooth()+
  labs(title= "Displacement vs Qsec")+
  theme_bw()
```
I want to combine all these plots into one figure with multiple pannels

We can use the **patchwork** package to do this.

```{r}
library(patchwork)

((p1| p2) / (p3 |p4))
```
```{r}
ggsave(filename= "myplot.png", width=10,height=10)
```

# File location online
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"
gapminder <- read.delim(url)

```{r}
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"
gapminder <- read.delim(url)
```

And a wee peak

> Q. How many countries are in this dataset?

```{r}
length(table(gapminder$country))
```

> Q. Plot gdpPercap vs lifeExp coloe by continent

```{r}
ggplot(gapminder)+
  aes(gdpPercap,lifeExp, color=continent)+
  geom_point(alpha=0.3) +
  facet_wrap(~continent)+
  theme_bw()
```




